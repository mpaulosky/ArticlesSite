# Example GitHub Actions workflow for Playwright E2E tests
# This file demonstrates how to run Playwright tests in CI/CD
# Copy this to .github/workflows/ to enable automated testing

name: Playwright E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Restore .NET dependencies
      run: dotnet restore
    
    - name: Build solution
      run: dotnet build --no-restore
    
    - name: Install Playwright dependencies
      working-directory: tests/Web.Tests.Playwright
      run: |
        npm ci
        npx playwright install --with-deps chromium
    
    - name: Start application
      run: |
        dotnet run --project src/AppHost &
        sleep 30
      env:
        ASPNETCORE_ENVIRONMENT: Development
    
    - name: Wait for application to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5000; do sleep 2; done'
    
    - name: Run Playwright tests
      working-directory: tests/Web.Tests.Playwright
      run: npm test
      env:
        BASE_URL: http://localhost:5000
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: tests/Web.Tests.Playwright/playwright-report/
        retention-days: 30
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-test-results
        path: tests/Web.Tests.Playwright/test-results/
        retention-days: 30
